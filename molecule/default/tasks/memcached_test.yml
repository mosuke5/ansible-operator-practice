---
- name: Create the cache.example.com/v1.Memcached
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'cache_v1alpha1_memcached.yaml'

- name: Add assertions here
  assert:
    that: true
    fail_msg: FIXME Add real assertions for your operator

## 期待するdeploymentができていること
- name: Get an existing Service object
  community.kubernetes.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: memcached-sample-memcached
    namespace: "{{ namespace }}"
  register: memcached_deployment

- name: Test if existing the deployment
  assert:
    that:
    - memcached_deployment.resources[0].metadata.name == "memcached-sample-memcached"

## 期待する数のPodができていること
- name: Get an existing Service object
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
    - app = memcached
  register: memcached_pods

- name: Test if existing pods
  assert:
    that:
    - "{{ memcached_pods.resources | length }} == 2"

## 期待するServiceができていること
- name: Get an existing Service object
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Service
    name: memcached-sample-memcached
    namespace: "{{ namespace }}"
  register: memcached_service

- name: Test if existing the service
  assert:
    that:
    - memcached_service.resources[0].metadata.name == "memcached-sample-memcached"

## CRを変更したあとにPod数が変更されること
- name: Change replica size to 3
  community.kubernetes.k8s:
    wait: true
    definition:
      kind: Memcached
      apiVersion: cache.example.com/v1alpha1
      metadata:
        name: memcached-sample
        namespace: "{{ namespace }}"
      spec:
        size: 3
        imagetag: 1.4.36-alpine

# todo
- wait_for:
    timeout: 15

- name: Get an existing pod objects
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors:
    - app = memcached
  register: memcached_pods

- name: Test if existing pods
  assert:
    that:
    - "{{ memcached_pods.resources | length }} == 3"
