---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: myexternaldeployments.cache.example.com
spec:
  group: cache.example.com
  names:
    kind: MyExternalDeployment
    listKind: MyExternalDeploymentList
    plural: myexternaldeployments
    singular: myexternaldeployment
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MyExternalDeployment is the Schema for the myexternaldeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MemcachedSpec defines the desired state of Memcached
            properties:
              monitoringUrl:
                description: Monitor http response and adjust deployment replicas
                type: string
                default: "http://blog.mosuke.tech/"
              imagetag:
                description: Image Tag is the name of image tag
                type: string
                default: "latest"
            required:
            - monitoringUrl
            type: object
          status:
            description: Status defines the observed state of MyExternalDeployment
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
